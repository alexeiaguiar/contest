name: Native Multi-Arch Docker Build and Manifest

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read

jobs:
  build-and-push:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64

    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::298616388696:role/GitHub-cicd-contest
          role-session-name: CICD-GitHub-Contest
          aws-region: ca-central-1

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: us-east-1
        with:
          registry-type: public

      - name: Set image tag
        id: set_tag
        run: |
          version=$(grep '^version' Cargo.toml | head -n1 | sed 's/version *= *"\(.*\)"/\1/')
          echo "image_tag=$version" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker build \
            -t public.ecr.aws/f8b4e6a1/contest:${{ steps.set_tag.outputs.image_tag }}-${{ matrix.arch }} \
            -f Dockerfile .
          docker push public.ecr.aws/f8b4e6a1/contest:${{ steps.set_tag.outputs.image_tag }}-${{ matrix.arch }}

  manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::298616388696:role/GitHub-cicd-contest
          role-session-name: CICD-GitHub-Contest
          aws-region: ca-central-1

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: us-east-1
        with:
          registry-type: public

      - name: Create and push manifest
        run: |
          version=$(grep '^version' Cargo.toml | head -n1 | sed 's/version *= *"\(.*\)"/\1/')
          docker manifest create public.ecr.aws/f8b4e6a1/contest:latest \
            public.ecr.aws/f8b4e6a1/contest:$version-amd64 \
            public.ecr.aws/f8b4e6a1/contest:$version-arm64
          docker manifest annotate public.ecr.aws/f8b4e6a1/contest:$version public.ecr.aws/f8b4e6a1/contest:$version-amd64 --os linux --arch amd64
          docker manifest annotate public.ecr.aws/f8b4e6a1/contest:$version public.ecr.aws/f8b4e6a1/contest:$version-arm64 --os linux --arch arm64
          docker manifest push public.ecr.aws/f8b4e6a1/contest:$version

  test_on_pipeline:
    runs-on: ubuntu-latest
    # FIXME Try to replace hardcoded version with the one from the Cargo.toml file
    container: public.ecr.aws/f8b4e6a1/contest:0.1.0
    needs: manifest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          /app/contest test.yaml
